<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinePutScript.LinePut</name>
    </assembly>
    <members>
        <member name="T:LinePutScript.LinePut.LineDisplay">
            <summary>
            记录一行所用的参数 (实意版本,不是纯文本)
            </summary>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.Set(LinePutScript.LinePut.LineDisplay)">
            <summary>
            从别处复制一份参数到本LD,(注意不包含Output)
            </summary>
            <param name="ld">样本</param>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.Equals(LinePutScript.LinePut.LineDisplay)">
            <summary>
            判断两个实意行是否有相同的格式 (不对比文本)
            </summary>
            <param name="ld">被对比的实意行</param>
            <returns></returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.UseRun">
            在什么情况下用Paragraph或者Run: 有非默认的TextAlignment
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.ToLine">
            <summary>
            将行显示行(实意)转换成行(文本) //注 |:| 会直接输出成行
            </summary>
            <returns>行(文本)</returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.ToLine(LinePutScript.LinePut.LineDisplay)">
            <summary>
            将行显示行(实意)转换成行(文本) //注 |:| 会直接输出成行
            </summary>
            <param name="OA">全局变量</param>
            <returns>行(文本)</returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.ToSubs">
            <summary>
            将显示行(实意)转换成Sub集合
            </summary>
            <returns>行(文本)</returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.ToSubs(LinePutScript.LinePut.LineDisplay)">
            <summary>
            将显示行(实意)转换成Sub集合
            </summary>
            <param name="OA">全局变量</param>
            <returns>行(文本)</returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.SimplifyLineDisplays(LinePutScript.LinePut.LineDisplay[])">
            <summary>
            对多个实意行进行简化处理 (合并同类项)
            </summary>
            <param name="displays">要被整理的多个实意</param>
            <returns></returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.LineDisplaysToLpsDocument(LinePutScript.LinePut.LineDisplay[])">
            <summary>
            将多个实意转换成Lps文档
            </summary>
            <param name="displays">实意行显示</param>
            <returns></returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.LineDisplaysToLpsDocument(LinePutScript.LinePut.LineDisplay[],LinePutScript.LinePut.LineDisplay)">
            <summary>
            将多个实意转换成Lps文档
            </summary>
            <param name="displays">实意行显示</param>
            <param name="OA">全局变量</param>
            <returns></returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.XamlToLPT(System.Windows.Documents.FlowDocument,LinePutScript.LinePut.LineDisplay)">
            <summary>
            将FlowDocument(Xaml)转换成实意显示行
            </summary>
            <param name="xaml">FlowDocument(Xaml)</param>
            <param name="OA">全局变量</param>
            <returns></returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.GetLineDisplayFormXmlElement(System.Xml.XmlElement,LinePutScript.LinePut.LineDisplay)">
            <summary>
            获取这一xml元素的全部数据
            </summary>
            <param name="element">ml元素</param>
            <param name="OA">全局/临时全局变量</param>
            <returns></returns>
        </member>
        <member name="M:LinePutScript.LinePut.LineDisplay.GetLineDisplaysFromLoopXmlElement(System.Xml.XmlElement,System.Collections.Generic.List{LinePutScript.LinePut.LineDisplay},LinePutScript.LinePut.LineDisplay)">
            <summary>
            循环获取文本输出从xml元素
            </summary>
            <param name="element">xml元素</param>
            <param name="displays">显示行列表</param>
            <param name="OA">全局/临时全局变量</param>
        </member>
        <member name="T:LinePutScript.LinePut.LptDocument">
            <summary>
            LPT文件:继承从LPS
            </summary>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.ColorConvent(System.Windows.Media.Color)">
            <summary>
            颜色转换
            </summary>
            <param name="color">Media颜色转Drawing颜色</param>
            <returns>Media颜色</returns>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.ColorConvent(System.Drawing.Color)">
            <summary>
            颜色转换
            </summary>
            <param name="color">Drawing颜色转Media颜色</param>
            <returns>Drawing颜色</returns>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.HEXToColor(System.String)">
            <summary>
            HEX颜色值转颜色
            </summary>
            <param name="HEX">HEX颜色值</param>
            <returns></returns>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.ColorToHEX(System.Windows.Media.Color)">
            <summary>
            颜色转HEX颜色值
            </summary>
            <param name="Color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.#ctor(System.String)">
            <summary>
            新建一个LPT文档从LPT文本
            </summary>
            <param name="LPT">lpt文本</param>
        </member>
        <member name="F:LinePutScript.LinePut.LptDocument.Verison">
            <summary>
            获取文件版本
            </summary>
        </member>
        <member name="F:LinePutScript.LinePut.LptDocument.FirstLineOtherInfo">
            <summary>
            获取第一行除了版本以外的其他全部信息
            </summary>
        </member>
        <member name="F:LinePutScript.LinePut.LptDocument.log">
            <summary>
            编译错误记录
            </summary>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.TextReplace(System.String@)">
            <summary>
            实际输出用的文本转换,无可逆
            </summary>
            <param name="Reptex">要被转换的文本</param>
        </member>
        <member name="F:LinePutScript.LinePut.LptDocument.IsSkipPageEnd">
            <summary>
            如果为true,跳过一次pageend
            </summary>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.DisplayLine(LinePutScript.Line,System.Windows.Documents.FlowDocument,LinePutScript.LinePut.LineDisplay,System.Boolean@)">
            <summary>
            显示其中一行的内容//只是单纯的显示(编辑用)
            </summary>
            <param name="line">哪一行的内容是</param>
            <param name="fd">要被显示的文档</param>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.Output(LinePutScript.LinePut.LineDisplay,System.Windows.Documents.FlowDocument,LinePutScript.LinePut.LineDisplay,System.Boolean)">
            <summary>
            输出内容到FlowDocument
            </summary>
            <param name="disThis">要输出的内容</param>
            <param name="fd">显示的FlowDocument</param>
            <param name="OAld">全局,可不填</param>
        </member>
        <member name="M:LinePutScript.LinePut.LptDocument.TextDeReplaceMD(System.String)">
            <summary>
            将文本进行反转义处理(正常显示的文本) //魔改版:不更改/stop
            </summary>
            <param name="Reptex">要反转义的文本</param>
            <returns>反转义后的文本 正常显示的文本</returns>
        </member>
        <member name="T:LinePutScript.LinePut.LptDocument.DisplayControl">
            <summary>
            控制显示委托 可用于插件,实现特殊功能等
            </summary>
            <param name="order">指令</param>
            <param name="ldp">预备显示内容</param>
            <param name="fd">流文档(输出端口</param>
        </member>
        <member name="T:LinePutScript.LinePut.LPTPlayer">
            <summary>
            LPT播放器:Lineput内容
            </summary>
        </member>
        <member name="M:LinePutScript.LinePut.LPTPlayer.TextDeReplace(System.String)">
            <summary>
            文本置换
            </summary>
            <param name="Reptex">原文本</param>
        </member>
        <member name="M:LinePutScript.LinePut.LPTPlayer.Save">
            <summary>
            保存每次切换的数据，用于切换页面
            </summary>
        </member>
    </members>
</doc>
