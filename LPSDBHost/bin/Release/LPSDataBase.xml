<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LPSDataBase</name>
    </assembly>
    <members>
        <member name="T:LinePutScript.DataBase.DataBase">
            <summary>
            数据库
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.DataBase.Name">
            <summary>
            库名
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.DataBase.LPS">
            <summary>
            数据文件
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.DataBase.#ctor(System.String)">
            <summary>
            创建新的内存数据库
            </summary>
            <param name="name">新内存数据库名称</param>
        </member>
        <member name="M:LinePutScript.DataBase.DataBase.#ctor(System.String,System.String)">
            <summary>
            创建新的内存数据库
            </summary>
            <param name="name">新内存数据库名称</param>
            <param name="lps">预先导入数据</param>
        </member>
        <member name="M:LinePutScript.DataBase.DataBase.#ctor(System.String,System.IO.FileInfo)">
            <summary>
            创建新的内存数据库
            </summary>
            <param name="name">新内存数据库名称</param>
            /// <param name="lpsdb">预先导入数据库文件</param>
        </member>
        <member name="P:LinePutScript.DataBase.DataBase.LineCapacity">
            <summary>
            分配给每行的内存容量
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.DataBase.LinePrepare">
            <summary>
            提前准备多少行
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.DataBase.UsePrepare">
            <summary>
            获取使用了多少行
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.DataBase.Length">
            <summary>
            获取文件大小
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.DataBase.AutoMapping">
            <summary>
            是否自动部署
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.DataBase.AutoBackup">
            <summary>
            是否自动备份
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.DataBase.Password">
            <summary>
            读取密码密码,为空则未设置
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.DataBase.Mapping">
            <summary>
            指示是否映射成功
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.DataBase.MaptoMemory">
            <summary>
            映射数据库到内存中
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.DataBase.Mapoff">
            <summary>
            关闭映射数据库
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.DataBase.SaveMemory">
            <summary>
            将映射在数据库的内存 储存回LPS
            </summary>
        </member>
        <member name="T:LinePutScript.DataBase.LPSDBHost">
            <summary>
            主机
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.LPSDBHost.PathMain">
            <summary>
            主机数据库位置
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.LPSDBHost.DataBases">
            <summary>
            数据库数据
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.LPSDBHost.CONFIG">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.LPSDBHost.timer">
            <summary>
            备份和储存共用的timer
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.#ctor(System.String)">
            <summary>
            从路径启动数据库主机
            </summary>
            <param name="path">路径:数据库储存位置</param>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.Timer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            自动备份和自动储存计时器
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.MaptoMemoryAuto">
            <summary>
            映射全部自动启动数据库
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.MaptoMemoryALL">
            <summary>
            映射全部数据库
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.MapOffALL">
            <summary>
            关闭映射全部数据库
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.BackUp(LinePutScript.DataBase.DataBase)">
            <summary>
            进行备份操作 注意:如果在备份前未保存,需要先使用 SaveMemory 将内存数据拉回本地
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.BackUpAuto">
            <summary>
            备份全部自动备份数据库
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.Save(LinePutScript.DataBase.DataBase)">
            <summary>
            进行存档操作
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.Close(LinePutScript.DataBase.DataBase)">
            <summary>
            进行关闭操作
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.SaveALL">
            <summary>
            存档全部数据库
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.CloseALL">
            <summary>
            退出全部数据库
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.LPSDBHost.ReName(LinePutScript.DataBase.DataBase,System.String)">
            <summary>
            修改数据库名
            </summary>
            <param name="db">数据库</param>
            <param name="NewName">新名称:仅大写+下划线</param>
        </member>
        <member name="T:LinePutScript.DataBase.Config">
            <summary>
            配置文件
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.Config.DB">
            <summary>
            配置文件RAW
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.Config.#ctor">
            <summary>
            无配置文件时默认设置
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.Config.#ctor(LinePutScript.DataBase.DataBase)">
            <summary>
            有配置文件
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.Config.AutoMapping">
            <summary>
            是否启动后自动部署
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.Config.AutoSaveTime">
            <summary>
            自动储存时间间隔 单位:毫秒
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.Config.AutoBackupTime">
            <summary>
            自动备份时间间隔 单位:毫秒
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.MapStringToMemory(System.String,System.String)">
            <summary>
            映射文本到内存
            </summary>
            <param name="Name">名字 确认内存的位置</param>
            <param name="str">文本</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.GETStringFromMemory(System.String)">
            <summary>
            从内存获取文本
            </summary>
            <param name="Name">名字 确认内存的位置</param>
            <returns>获取的文本</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.GETLineFromMemory(System.String)">
            <summary>
            从内存获取Line
            </summary>
            <param name="Name">名字 确认内存的位置</param>
            <returns>获取的Line</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.GETStringAndLock(System.String)">
            <summary>
            从内存获取文本
            </summary>
            <param name="Name">名字 确认内存的位置</param>
            <returns>获取的文本</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.GETLineAndLock(System.String)">
            <summary>
            从内存获取Line
            </summary>
            <param name="Name">名字 确认内存的位置</param>
            <returns>获取的Line</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.NLGETStringFromMemory(System.String)">
            <summary>
            从内存获取文本 !无视内存锁!
            </summary>
            <param name="Name">名字 确认内存的位置</param>
            <returns>获取的文本</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.NLGETLineFromMemory(System.String)">
            <summary>
            从内存获取Line !无视内存锁!
            </summary>
            <param name="Name">名字 确认内存的位置</param>
            <returns>获取的Line</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.IsLock(System.String)">
            <summary>
            判断内存是否被锁定
            </summary>
            <param name="Name">名字 确认内存的位置</param>
            <returns>退回锁定状态</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.Lock(System.String)">
            <summary>
            锁定指定内存
            </summary>
            <param name="Name">名字 确认内存的位置</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.UnLock(System.String)">
            <summary>
            解锁指定内存
            </summary>
            <param name="Name">名字 确认内存的位置</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.WaitLock(System.String)">
            <summary>
            等待锁定解锁
            </summary>
            <param name="Name">名字 确认内存的位置</param>
        </member>
        <member name="T:LinePutScript.DataBase.MapHelper.LineHelper">
            <summary>
            行读取帮助类
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.MapHelper.LineHelper.DBName">
            <summary>
            连接数据库名
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.RAW">
            <summary>
            源数据
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.UseDataCache">
            <summary>
            是否正在使用缓存技术
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.StartCache">
            <summary>
            之后的操作不会被写入数据库,而是缓存起来
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.CacheToMemory">
            <summary>
            将缓存的内容写入数据库,同时关闭写入缓存
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.line">
            <summary>
            获取行
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.Name">
            <summary>
            名称 没有唯一性
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.info">
            <summary>
            信息 (去除关键字的文本)
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.Info">
            <summary>
            信息 (正常)
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.text">
            <summary>
            文本 在末尾没有结束行号的文本 (去除关键字的文本)
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.Text">
            <summary>
            文本 在末尾没有结束行号的文本 (正常)
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.LineHelper.Subs">
            <summary>
            子项目 !注意:无法直接修改,仅供获取!
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.AddSub(LinePutScript.Sub)">
            <summary>
            将指定的Sub添加到Subs列表的末尾
            </summary>
            <param name="newSub">要添加的Sub</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.AddRange(LinePutScript.Sub[])">
            <summary>
            将指定Sub的元素添加到Subs的末尾
            </summary>
            <param name="newSubs">要添加的多个Sub</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.InsertSub(System.Int32,LinePutScript.Sub)">
            <summary>
            将指定的Sub添加到指定索引处
            </summary>
            <param name="index">应插入 Sub 的从零开始的索引</param>
            <param name="newSub">要添加的Sub</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.InsertRange(System.Int32,LinePutScript.Sub[])">
            <summary>
            将指定Sub的元素添加指定索引处
            </summary>
            <param name="index">应插入 Sub 的从零开始的索引</param>
            <param name="newSubs">要添加的多个Sub</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.Remove(System.String)">
            <summary>
            从Subs中移除特定对象的第一个匹配项
            </summary>
            <param name="SubName">要从Subs中删除的Sub的名称</param>
            <returns>如果成功移除了Sub，则为 true；否则为 false</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.RemoveAll(System.String)">
            <summary>
            从Subs中移除特定对象的所有元素
            </summary>
            <param name="SubName">要从Subs中删除的Sub的名称</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.Contains(System.String)">
            <summary>
            返回一个值，该值指示指定的字段是否出现在Subs的Sub的名字
            </summary>
            <param name="value">字段</param>
            <returns>如果在Line集合中找到符合的名字，则为True；否则为false</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.Have(System.String)">
            <summary>
            确定某Sub是否在Line集合中
            </summary>
            <param name="subName">要在Line集合中定位的Sub的名字</param>
            <returns>如果在Line集合中找到符合的名字，则为True；否则为false</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.FindAll(System.String)">
            <summary>
            匹配拥有相同名称的Line或sub的所有元素 !注意:无法直接修改,仅供获取!
            </summary>
            <param name="subName">用于定义匹配的名称</param>
            <returns>如果找到相同名称的sub，其中所有元素均与指定谓词定义的条件匹配，则为该数组；否则为一个空的Array</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.Find(System.String)">
            <summary>
            搜索与指定名称，并返回Line或整个Subs中的第一个匹配元素 !注意:无法直接修改,仅供获取!
            </summary>
            <param name="subName">用于定义匹配的名称</param>
            <returns>如果找到相同名称的第一个sub，则为该sub；否则为null</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.SeachALL(System.String)">
            <summary>
            搜索全部相似名称的Sub的所有元素 !注意:无法直接修改,仅供获取!
            </summary>
            <param name="value">字段</param>
            <returns>如果找到相似名称的Sub,则为数组；否则为一个空的Array</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.Seach(System.String)">
            <summary>
            搜索字段是否出现在Line名称，并返回整个Subs中的第一个匹配元素 !注意:无法直接修改,仅供获取!
            </summary>
            <param name="value">字段</param>
            <returns>如果找到相似名称的第一个Sub，则为该Sub；否则为null</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.IndexOf(System.String)">
            <summary>
            搜索相同名称的Sub，并返回整个Subs中第一个匹配的sub从零开始的索引
            </summary>
            <param name="subName">用于定义匹配的名称</param>
            <returns>如果找到相同名称的sub的第一个元素，则为该元素的从零开始的索引；否则为 -1</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.IndexsOf(System.String)">
            <summary>
            搜索相同名称的Sub，并返回整个Sub中全部匹配的sub从零开始的索引
            </summary>
            <param name="subName">用于定义匹配的名称</param>
            <returns>如果找到相同名称的sub的元素，则为该元素的从零开始的索引组；否则为空的Array</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.ToString">
            <summary>
            将当前Line转换成文本格式 (info已经被转义/去除关键字)
            </summary>
            <returns>Line的文本格式 (info已经被转义/去除关键字)</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.GetEnumerator">
            <summary>
            返回循环访问 Subs 的枚举数。 !注意:无法直接修改,仅供获取!
            </summary>
            <returns>用于 Subs 的枚举数</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.First">
            <summary>
            返回一个 Subs 的第一个元素。!注意:无法直接修改,仅供获取!
            </summary>
            <returns>要返回的第一个元素</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.Last">
            <summary>
            返回一个 Subs 的最后一个元素。!注意:无法直接修改,仅供获取!
            </summary>
            <returns>要返回的最后一个元素</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.LineHelper.AddOrReplace(LinePutScript.Sub)">
            <summary>
            添加或替换Sub在Subs
            </summary>
            <param name="sub">被替换的subs</param>
        </member>
        <member name="T:LinePutScript.DataBase.MapHelper.DBHelper">
            <summary>
            数据库读取帮助类
            </summary>
        </member>
        <member name="F:LinePutScript.DataBase.MapHelper.DBHelper.DBName">
            <summary>
            要求:全称 包括前缀lpsdb
            </summary>
        </member>
        <member name="P:LinePutScript.DataBase.MapHelper.DBHelper.LPS">
            <summary>
            获取整个LPS文档 !注意:无法直接修改,仅供获取! !注意:占用时间长!
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.Assemblage">
            <summary>
            获取所有行数据
            </summary>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.AddLine(LinePutScript.Line)">
            <summary>
            将指定的Line添加到Assemblage列表的末尾
            </summary>
            <param name="newLine">要添加的Line</param>
            <returns>返回添加行的数据位置</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.AddRange(LinePutScript.Line[])">
            <summary>
            将指定Line的元素添加到Assemblage的末尾
            </summary>
            <param name="newLines">要添加的多个Line</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.InsertLine(System.Int32,LinePutScript.Line)">
            <summary>
            将指定的Line添加到指定索引处
            </summary>
            <param name="index">应插入 Line 的从零开始的索引</param>
            <param name="newLine">要添加的Line</param>
            <returns>返回添加行的数据位置</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.InsertRange(System.Int32,LinePutScript.Line[])">
            <summary>
            将指定Line的元素添加指定索引处
            </summary>
            <param name="index">应插入 Line 的从零开始的索引</param>
            <param name="newLines">要添加的多个Line</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.Remove(System.String)">
            <summary>
            从Assemblage中移除特定名称的第一个匹配项
            </summary>
            <param name="lineName">要从Assemblage中删除的Line的名称</param>
            <returns>如果成功移除了line，则为 true；否则为 false</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.RemoveAt(System.Int32)">
            <summary>
            移除Assemblage的指定索引处的Line
            </summary>
            <param name="index">要移除的Line的从零开始的索引</param>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.HaveLine(System.String)">
            <summary>
            确定某Line(名字定位)是否在Assemblage中
            </summary>
            <param name="lineName">Line的名字</param>
            <returns>如果在Assemblage中找到相同的名字，则为True；否则为false</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.FindLine(System.String)">
            <summary>
            搜索与指定名称，并返回整个Assemblage中的第一个匹配元素
            </summary>
            <param name="lineName">用于定义匹配的名称</param>
            <returns>如果找到相同名称的第一个Line，则为该Line；否则为null</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.FindAllLine(System.String)">
            <summary>
            匹配拥有相同名称的Line的所有元素
            </summary>
            <param name="lineName">用于定义匹配的名称</param>
            <returns>如果找到相同名称的Line，其中所有元素均与指定谓词定义的条件匹配，则为该数组；否则为一个空的Array</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.SearchAllLine(System.String)">
            <summary>
            搜索全部相似名称的Line的所有元素
            </summary>
            <param name="value">字段</param>
            <returns>如果找到相似名称的Line,则为数组；否则为一个空的Array</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.SearchLine(System.String)">
            <summary>
            搜索字段是否出现在Line名称，并返回整个Assemblage中的第一个匹配元素
            </summary>
            <param name="value">字段</param>
            <returns>如果找到相似名称的第一个Line，则为该Line；否则为null</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.IndexOf(System.String)">
            <summary>
            搜索相同名称的Line，并返回整个Assemblage中第一个匹配的Line从零开始的索引
            </summary>
            <param name="lineName">用于定义匹配的名称</param>
            <returns>如果找到相同名称的Line的第一个元素，则为该元素的从零开始的索引；否则为 -1</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.IndexsOf(System.String)">
            <summary>
            搜索相同名称的Line，并返回整个Assemblage中全部匹配的Line从零开始的索引
            </summary>
            <param name="lineName">用于定义匹配的名称</param>
            <returns>如果找到相同名称的Line的元素，则为该元素的从零开始的索引组；否则为空的Array</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.First">
            <summary>
            返回一个Assemblage的第一个元素。
            </summary>
            <returns>要返回的第一个元素</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.Last">
            <summary>
            返回一个Assemblage的最后一个元素。
            </summary>
            <returns>要返回的最后一个元素</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.ToString">
            <summary>
            将当前Documents转换成文本格式 !占用时间长!
            </summary>
            <returns>LinePutScript的文本格式</returns>
        </member>
        <member name="M:LinePutScript.DataBase.MapHelper.DBHelper.AddOrReplace(LinePutScript.Line)">
            <summary>
            添加或替换Line在Assemblage
            </summary>
            <param name="line">被替换的Line</param>
        </member>
    </members>
</doc>
